ARM GAS  /tmp/ccTb8d7A.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	NMI_Handler:
  24              	.LFB64:
  25              		.file 1 "Core/Src/stm32f1xx_it.c"
   1:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f1xx_it.c **** /**
   3:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f1xx_it.c ****   * @attention
   8:Core/Src/stm32f1xx_it.c ****   *
   9:Core/Src/stm32f1xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/stm32f1xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f1xx_it.c ****   *
  12:Core/Src/stm32f1xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f1xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f1xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f1xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f1xx_it.c ****   *
  17:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f1xx_it.c ****   */
  19:Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f1xx_it.c **** 
  21:Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f1xx_it.c **** #include "main.h"
  23:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  24:Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f1xx_it.c **** 
  28:Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f1xx_it.c **** #include "uart.h"
  31:Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f1xx_it.c **** 
  33:Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccTb8d7A.s 			page 2


  34:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f1xx_it.c ****  
  36:Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f1xx_it.c **** 
  38:Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f1xx_it.c **** 
  41:Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f1xx_it.c **** 
  43:Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f1xx_it.c **** 
  46:Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f1xx_it.c **** 
  48:Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f1xx_it.c **** 
  51:Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f1xx_it.c **** 
  53:Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f1xx_it.c **** 
  56:Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f1xx_it.c **** 
  58:Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f1xx_it.c **** 
  60:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  61:Core/Src/stm32f1xx_it.c **** 
  62:Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  63:Core/Src/stm32f1xx_it.c **** 
  64:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  65:Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */ 
  66:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  67:Core/Src/stm32f1xx_it.c **** /**
  68:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  69:Core/Src/stm32f1xx_it.c ****   */
  70:Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  71:Core/Src/stm32f1xx_it.c **** {
  26              		.loc 1 71 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 7047     		bx	lr
  32              		.cfi_endproc
  33              	.LFE64:
  35              		.section	.text.HardFault_Handler,"ax",%progbits
  36              		.align	1
  37              		.global	HardFault_Handler
  38              		.syntax unified
  39              		.thumb
  40              		.thumb_func
  41              		.fpu softvfp
  43              	HardFault_Handler:
  44              	.LFB65:
  72:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  73:Core/Src/stm32f1xx_it.c **** 
ARM GAS  /tmp/ccTb8d7A.s 			page 3


  74:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  75:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  76:Core/Src/stm32f1xx_it.c **** 
  77:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  78:Core/Src/stm32f1xx_it.c **** }
  79:Core/Src/stm32f1xx_it.c **** 
  80:Core/Src/stm32f1xx_it.c **** /**
  81:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  82:Core/Src/stm32f1xx_it.c ****   */
  83:Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  84:Core/Src/stm32f1xx_it.c **** {
  45              		.loc 1 84 0
  46              		.cfi_startproc
  47              		@ Volatile: function does not return.
  48              		@ args = 0, pretend = 0, frame = 0
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		@ link register save eliminated.
  51              	.L3:
  52 0000 FEE7     		b	.L3
  53              		.cfi_endproc
  54              	.LFE65:
  56              		.section	.text.MemManage_Handler,"ax",%progbits
  57              		.align	1
  58              		.global	MemManage_Handler
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu softvfp
  64              	MemManage_Handler:
  65              	.LFB66:
  85:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  86:Core/Src/stm32f1xx_it.c **** 
  87:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  88:Core/Src/stm32f1xx_it.c ****   while (1)
  89:Core/Src/stm32f1xx_it.c ****   {
  90:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  91:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  92:Core/Src/stm32f1xx_it.c ****   }
  93:Core/Src/stm32f1xx_it.c **** }
  94:Core/Src/stm32f1xx_it.c **** 
  95:Core/Src/stm32f1xx_it.c **** /**
  96:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
  97:Core/Src/stm32f1xx_it.c ****   */
  98:Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
  99:Core/Src/stm32f1xx_it.c **** {
  66              		.loc 1 99 0
  67              		.cfi_startproc
  68              		@ Volatile: function does not return.
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  72              	.L5:
  73 0000 FEE7     		b	.L5
  74              		.cfi_endproc
  75              	.LFE66:
  77              		.section	.text.BusFault_Handler,"ax",%progbits
  78              		.align	1
ARM GAS  /tmp/ccTb8d7A.s 			page 4


  79              		.global	BusFault_Handler
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu softvfp
  85              	BusFault_Handler:
  86              	.LFB67:
 100:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 101:Core/Src/stm32f1xx_it.c **** 
 102:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 103:Core/Src/stm32f1xx_it.c ****   while (1)
 104:Core/Src/stm32f1xx_it.c ****   {
 105:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 106:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 107:Core/Src/stm32f1xx_it.c ****   }
 108:Core/Src/stm32f1xx_it.c **** }
 109:Core/Src/stm32f1xx_it.c **** 
 110:Core/Src/stm32f1xx_it.c **** /**
 111:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 112:Core/Src/stm32f1xx_it.c ****   */
 113:Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 114:Core/Src/stm32f1xx_it.c **** {
  87              		.loc 1 114 0
  88              		.cfi_startproc
  89              		@ Volatile: function does not return.
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.L7:
  94 0000 FEE7     		b	.L7
  95              		.cfi_endproc
  96              	.LFE67:
  98              		.section	.text.UsageFault_Handler,"ax",%progbits
  99              		.align	1
 100              		.global	UsageFault_Handler
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 104              		.fpu softvfp
 106              	UsageFault_Handler:
 107              	.LFB68:
 115:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 116:Core/Src/stm32f1xx_it.c **** 
 117:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 118:Core/Src/stm32f1xx_it.c ****   while (1)
 119:Core/Src/stm32f1xx_it.c ****   {
 120:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 121:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 122:Core/Src/stm32f1xx_it.c ****   }
 123:Core/Src/stm32f1xx_it.c **** }
 124:Core/Src/stm32f1xx_it.c **** 
 125:Core/Src/stm32f1xx_it.c **** /**
 126:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 127:Core/Src/stm32f1xx_it.c ****   */
 128:Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 129:Core/Src/stm32f1xx_it.c **** {
 108              		.loc 1 129 0
ARM GAS  /tmp/ccTb8d7A.s 			page 5


 109              		.cfi_startproc
 110              		@ Volatile: function does not return.
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              		@ link register save eliminated.
 114              	.L9:
 115 0000 FEE7     		b	.L9
 116              		.cfi_endproc
 117              	.LFE68:
 119              		.section	.text.SVC_Handler,"ax",%progbits
 120              		.align	1
 121              		.global	SVC_Handler
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 125              		.fpu softvfp
 127              	SVC_Handler:
 128              	.LFB69:
 130:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 131:Core/Src/stm32f1xx_it.c **** 
 132:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 133:Core/Src/stm32f1xx_it.c ****   while (1)
 134:Core/Src/stm32f1xx_it.c ****   {
 135:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 136:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 137:Core/Src/stm32f1xx_it.c ****   }
 138:Core/Src/stm32f1xx_it.c **** }
 139:Core/Src/stm32f1xx_it.c **** 
 140:Core/Src/stm32f1xx_it.c **** /**
 141:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 142:Core/Src/stm32f1xx_it.c ****   */
 143:Core/Src/stm32f1xx_it.c **** void SVC_Handler(void)
 144:Core/Src/stm32f1xx_it.c **** {
 129              		.loc 1 144 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134 0000 7047     		bx	lr
 135              		.cfi_endproc
 136              	.LFE69:
 138              		.section	.text.DebugMon_Handler,"ax",%progbits
 139              		.align	1
 140              		.global	DebugMon_Handler
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu softvfp
 146              	DebugMon_Handler:
 147              	.LFB70:
 145:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 146:Core/Src/stm32f1xx_it.c **** 
 147:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 148:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 149:Core/Src/stm32f1xx_it.c **** 
 150:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 151:Core/Src/stm32f1xx_it.c **** }
ARM GAS  /tmp/ccTb8d7A.s 			page 6


 152:Core/Src/stm32f1xx_it.c **** 
 153:Core/Src/stm32f1xx_it.c **** /**
 154:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 155:Core/Src/stm32f1xx_it.c ****   */
 156:Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 157:Core/Src/stm32f1xx_it.c **** {
 148              		.loc 1 157 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 153 0000 7047     		bx	lr
 154              		.cfi_endproc
 155              	.LFE70:
 157              		.section	.text.PendSV_Handler,"ax",%progbits
 158              		.align	1
 159              		.global	PendSV_Handler
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu softvfp
 165              	PendSV_Handler:
 166              	.LFB71:
 158:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 159:Core/Src/stm32f1xx_it.c **** 
 160:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 161:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 162:Core/Src/stm32f1xx_it.c **** 
 163:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 164:Core/Src/stm32f1xx_it.c **** }
 165:Core/Src/stm32f1xx_it.c **** 
 166:Core/Src/stm32f1xx_it.c **** /**
 167:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 168:Core/Src/stm32f1xx_it.c ****   */
 169:Core/Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 170:Core/Src/stm32f1xx_it.c **** {
 167              		.loc 1 170 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172 0000 7047     		bx	lr
 173              		.cfi_endproc
 174              	.LFE71:
 176              		.section	.text.SysTick_Handler,"ax",%progbits
 177              		.align	1
 178              		.global	SysTick_Handler
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 182              		.fpu softvfp
 184              	SysTick_Handler:
 185              	.LFB72:
 171:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 172:Core/Src/stm32f1xx_it.c **** 
 173:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 174:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
ARM GAS  /tmp/ccTb8d7A.s 			page 7


 175:Core/Src/stm32f1xx_it.c **** 
 176:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 177:Core/Src/stm32f1xx_it.c **** }
 178:Core/Src/stm32f1xx_it.c **** 
 179:Core/Src/stm32f1xx_it.c **** /**
 180:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 181:Core/Src/stm32f1xx_it.c ****   */
 182:Core/Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 183:Core/Src/stm32f1xx_it.c **** {
 186              		.loc 1 183 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		.loc 1 183 0
 191 0000 08B5     		push	{r3, lr}
 192              	.LCFI0:
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 3, -8
 195              		.cfi_offset 14, -4
 184:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 185:Core/Src/stm32f1xx_it.c **** 
 186:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 187:Core/Src/stm32f1xx_it.c ****   HAL_IncTick();
 196              		.loc 1 187 0
 197 0002 FFF7FEFF 		bl	HAL_IncTick
 198              	.LVL0:
 199 0006 08BD     		pop	{r3, pc}
 200              		.cfi_endproc
 201              	.LFE72:
 203              		.comm	huart1,64,4
 204              		.text
 205              	.Letext0:
 206              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 207              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 208              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 209              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 210              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 211              		.file 7 "/usr/include/newlib/sys/lock.h"
 212              		.file 8 "/usr/include/newlib/sys/_types.h"
 213              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 214              		.file 10 "/usr/include/newlib/sys/reent.h"
 215              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 216              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 217              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 218              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 219              		.file 15 "Core/Inc/usart.h"
 220              		.file 16 "Core/Inc/uart.h"
ARM GAS  /tmp/ccTb8d7A.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_it.c
     /tmp/ccTb8d7A.s:16     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccTb8d7A.s:23     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccTb8d7A.s:36     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccTb8d7A.s:43     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccTb8d7A.s:57     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccTb8d7A.s:64     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccTb8d7A.s:78     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccTb8d7A.s:85     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccTb8d7A.s:99     .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccTb8d7A.s:106    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccTb8d7A.s:120    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccTb8d7A.s:127    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccTb8d7A.s:139    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccTb8d7A.s:146    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccTb8d7A.s:158    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccTb8d7A.s:165    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccTb8d7A.s:177    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccTb8d7A.s:184    .text.SysTick_Handler:0000000000000000 SysTick_Handler
                            *COM*:0000000000000040 huart1
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
