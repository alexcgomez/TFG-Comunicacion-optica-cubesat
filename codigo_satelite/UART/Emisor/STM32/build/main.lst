ARM GAS  /tmp/cc6KeydF.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemClock_Config,"ax",%progbits
  16              		.align	1
  17              		.global	SystemClock_Config
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	SystemClock_Config:
  25              	.LFB67:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** 
  21:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/main.c **** #include "main.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** #include "uart.h"
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/cc6KeydF.s 			page 2


  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****   * @brief  The application entry point.
  66:Core/Src/main.c ****   * @retval int
  67:Core/Src/main.c ****   */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* USER CODE END 1 */
  73:Core/Src/main.c ****   
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END SysInit */
ARM GAS  /tmp/cc6KeydF.s 			page 3


  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  93:Core/Src/main.c ****   MX_USART1_UART_Init();
  94:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  95:Core/Src/main.c ****   /* USER CODE END 2 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Infinite loop */
  98:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  99:Core/Src/main.c ****   while (1)
 100:Core/Src/main.c ****   {
 101:Core/Src/main.c ****     uart_print("Hola");
 102:Core/Src/main.c ****     uart_print("\n");
 103:Core/Src/main.c ****     HAL_Delay(2000);
 104:Core/Src/main.c ****     /* USER CODE END WHILE */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 107:Core/Src/main.c ****   }
 108:Core/Src/main.c ****   /* USER CODE END 3 */
 109:Core/Src/main.c **** }
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /**
 112:Core/Src/main.c ****   * @brief System Clock Configuration
 113:Core/Src/main.c ****   * @retval None
 114:Core/Src/main.c ****   */
 115:Core/Src/main.c **** void SystemClock_Config(void)
 116:Core/Src/main.c **** {
  27              		.loc 1 116 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 64
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 91B0     		sub	sp, sp, #68
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 80
 117:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  40              		.loc 1 117 3 view .LVU1
  41              		.loc 1 117 22 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0994     		str	r4, [sp, #36]
  44 0008 0B94     		str	r4, [sp, #44]
  45 000a 0C94     		str	r4, [sp, #48]
 118:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  46              		.loc 1 118 3 is_stmt 1 view .LVU3
  47              		.loc 1 118 22 is_stmt 0 view .LVU4
  48 000c 0194     		str	r4, [sp, #4]
  49 000e 0294     		str	r4, [sp, #8]
  50 0010 0394     		str	r4, [sp, #12]
  51 0012 0494     		str	r4, [sp, #16]
  52 0014 0594     		str	r4, [sp, #20]
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
ARM GAS  /tmp/cc6KeydF.s 			page 4


 121:Core/Src/main.c ****   */
 122:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  53              		.loc 1 122 3 is_stmt 1 view .LVU5
  54              		.loc 1 122 36 is_stmt 0 view .LVU6
  55 0016 0122     		movs	r2, #1
  56 0018 0692     		str	r2, [sp, #24]
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  57              		.loc 1 123 3 is_stmt 1 view .LVU7
  58              		.loc 1 123 30 is_stmt 0 view .LVU8
  59 001a 4FF48033 		mov	r3, #65536
  60 001e 0793     		str	r3, [sp, #28]
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  61              		.loc 1 124 3 is_stmt 1 view .LVU9
  62              		.loc 1 124 36 is_stmt 0 view .LVU10
  63 0020 0894     		str	r4, [sp, #32]
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  64              		.loc 1 125 3 is_stmt 1 view .LVU11
  65              		.loc 1 125 30 is_stmt 0 view .LVU12
  66 0022 0A92     		str	r2, [sp, #40]
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  67              		.loc 1 126 3 is_stmt 1 view .LVU13
  68              		.loc 1 126 34 is_stmt 0 view .LVU14
  69 0024 0225     		movs	r5, #2
  70 0026 0D95     		str	r5, [sp, #52]
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  71              		.loc 1 127 3 is_stmt 1 view .LVU15
  72              		.loc 1 127 35 is_stmt 0 view .LVU16
  73 0028 0E93     		str	r3, [sp, #56]
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  74              		.loc 1 128 3 is_stmt 1 view .LVU17
  75              		.loc 1 128 32 is_stmt 0 view .LVU18
  76 002a 4FF4E013 		mov	r3, #1835008
  77 002e 0F93     		str	r3, [sp, #60]
 129:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  78              		.loc 1 129 3 is_stmt 1 view .LVU19
  79              		.loc 1 129 7 is_stmt 0 view .LVU20
  80 0030 06A8     		add	r0, sp, #24
  81 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
  82              	.LVL0:
 130:Core/Src/main.c ****   {
 131:Core/Src/main.c ****     Error_Handler();
 132:Core/Src/main.c ****   }
 133:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  83              		.loc 1 135 3 is_stmt 1 view .LVU21
  84              		.loc 1 135 31 is_stmt 0 view .LVU22
  85 0036 0F23     		movs	r3, #15
  86 0038 0193     		str	r3, [sp, #4]
 136:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 137:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  87              		.loc 1 137 3 is_stmt 1 view .LVU23
  88              		.loc 1 137 34 is_stmt 0 view .LVU24
  89 003a 0295     		str	r5, [sp, #8]
 138:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  90              		.loc 1 138 3 is_stmt 1 view .LVU25
  91              		.loc 1 138 35 is_stmt 0 view .LVU26
ARM GAS  /tmp/cc6KeydF.s 			page 5


  92 003c 0394     		str	r4, [sp, #12]
 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  93              		.loc 1 139 3 is_stmt 1 view .LVU27
  94              		.loc 1 139 36 is_stmt 0 view .LVU28
  95 003e 4FF48063 		mov	r3, #1024
  96 0042 0493     		str	r3, [sp, #16]
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  97              		.loc 1 140 3 is_stmt 1 view .LVU29
  98              		.loc 1 140 36 is_stmt 0 view .LVU30
  99 0044 0594     		str	r4, [sp, #20]
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 100              		.loc 1 142 3 is_stmt 1 view .LVU31
 101              		.loc 1 142 7 is_stmt 0 view .LVU32
 102 0046 2946     		mov	r1, r5
 103 0048 01A8     		add	r0, sp, #4
 104 004a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 105              	.LVL1:
 143:Core/Src/main.c ****   {
 144:Core/Src/main.c ****     Error_Handler();
 145:Core/Src/main.c ****   }
 146:Core/Src/main.c **** }
 106              		.loc 1 146 1 view .LVU33
 107 004e 11B0     		add	sp, sp, #68
 108              	.LCFI2:
 109              		.cfi_def_cfa_offset 12
 110              		@ sp needed
 111 0050 30BD     		pop	{r4, r5, pc}
 112              		.cfi_endproc
 113              	.LFE67:
 115              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 116              		.align	2
 117              	.LC0:
 118 0000 486F6C61 		.ascii	"Hola\000"
 118      00
 119 0005 000000   		.align	2
 120              	.LC1:
 121 0008 0A00     		.ascii	"\012\000"
 122              		.section	.text.main,"ax",%progbits
 123              		.align	1
 124              		.global	main
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu softvfp
 130              	main:
 131              	.LFB66:
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 132              		.loc 1 69 1 is_stmt 1 view -0
 133              		.cfi_startproc
 134              		@ Volatile: function does not return.
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137 0000 08B5     		push	{r3, lr}
 138              	.LCFI3:
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 3, -8
ARM GAS  /tmp/cc6KeydF.s 			page 6


 141              		.cfi_offset 14, -4
  78:Core/Src/main.c **** 
 142              		.loc 1 78 3 view .LVU35
 143 0002 FFF7FEFF 		bl	HAL_Init
 144              	.LVL2:
  85:Core/Src/main.c **** 
 145              		.loc 1 85 3 view .LVU36
 146 0006 FFF7FEFF 		bl	SystemClock_Config
 147              	.LVL3:
  92:Core/Src/main.c ****   MX_USART1_UART_Init();
 148              		.loc 1 92 3 view .LVU37
 149 000a FFF7FEFF 		bl	MX_GPIO_Init
 150              	.LVL4:
  93:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 151              		.loc 1 93 3 view .LVU38
 152 000e FFF7FEFF 		bl	MX_USART1_UART_Init
 153              	.LVL5:
 154              	.L4:
  99:Core/Src/main.c ****   {
 155              		.loc 1 99 3 discriminator 1 view .LVU39
 101:Core/Src/main.c ****     uart_print("\n");
 156              		.loc 1 101 5 discriminator 1 view .LVU40
 157 0012 0548     		ldr	r0, .L6
 158 0014 FFF7FEFF 		bl	uart_print
 159              	.LVL6:
 102:Core/Src/main.c ****     HAL_Delay(2000);
 160              		.loc 1 102 5 discriminator 1 view .LVU41
 161 0018 0448     		ldr	r0, .L6+4
 162 001a FFF7FEFF 		bl	uart_print
 163              	.LVL7:
 103:Core/Src/main.c ****     /* USER CODE END WHILE */
 164              		.loc 1 103 5 discriminator 1 view .LVU42
 165 001e 4FF4FA60 		mov	r0, #2000
 166 0022 FFF7FEFF 		bl	HAL_Delay
 167              	.LVL8:
  99:Core/Src/main.c ****   {
 168              		.loc 1 99 9 discriminator 1 view .LVU43
 169 0026 F4E7     		b	.L4
 170              	.L7:
 171              		.align	2
 172              	.L6:
 173 0028 00000000 		.word	.LC0
 174 002c 08000000 		.word	.LC1
 175              		.cfi_endproc
 176              	.LFE66:
 178              		.section	.text.Error_Handler,"ax",%progbits
 179              		.align	1
 180              		.global	Error_Handler
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu softvfp
 186              	Error_Handler:
 187              	.LFB68:
 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 149:Core/Src/main.c **** /* USER CODE END 4 */
ARM GAS  /tmp/cc6KeydF.s 			page 7


 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** /**
 152:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 153:Core/Src/main.c ****   * @retval None
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c **** void Error_Handler(void)
 156:Core/Src/main.c **** {
 188              		.loc 1 156 1 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 157:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 158:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 161:Core/Src/main.c **** }
 193              		.loc 1 161 1 view .LVU45
 194 0000 7047     		bx	lr
 195              		.cfi_endproc
 196              	.LFE68:
 198              		.comm	huart1,64,4
 199              		.text
 200              	.Letext0:
 201              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 202              		.file 3 "Drivers/CMSIS/Include/core_cm3.h"
 203              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 204              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 205              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 206              		.file 7 "/usr/include/newlib/sys/_types.h"
 207              		.file 8 "/usr/include/newlib/sys/reent.h"
 208              		.file 9 "/usr/include/newlib/sys/lock.h"
 209              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 210              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 211              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 212              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 213              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 214              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 215              		.file 16 "Core/Inc/usart.h"
 216              		.file 17 "Core/Inc/gpio.h"
 217              		.file 18 "Core/Inc/uart.h"
ARM GAS  /tmp/cc6KeydF.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc6KeydF.s:16     .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc6KeydF.s:24     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc6KeydF.s:116    .rodata.main.str1.4:0000000000000000 $d
     /tmp/cc6KeydF.s:123    .text.main:0000000000000000 $t
     /tmp/cc6KeydF.s:130    .text.main:0000000000000000 main
     /tmp/cc6KeydF.s:173    .text.main:0000000000000028 $d
     /tmp/cc6KeydF.s:179    .text.Error_Handler:0000000000000000 $t
     /tmp/cc6KeydF.s:186    .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000040 huart1

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
uart_print
HAL_Delay
